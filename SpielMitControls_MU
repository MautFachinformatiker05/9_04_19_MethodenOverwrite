package application;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.stage.Stage;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ProgressIndicator;
import javafx.scene.control.RadioButton;
import javafx.scene.control.Slider;
import javafx.scene.control.TextField;
import javafx.scene.control.Toggle;
import javafx.scene.control.ToggleGroup;
import javafx.scene.control.Tooltip;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Background;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.paint.ImagePattern;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.Shape;
import javafx.scene.text.Text;

public class Main extends Application {
	@Override
	public void start(Stage primaryStage) throws FileNotFoundException {

		File file = new File(getClass().getClassLoader().getResource("clown.gif").getFile());
		File file1 = new File(getClass().getClassLoader().getResource("clown2.gif").getFile());
		Image clown = new Image(new FileInputStream(file));
		Image clown2 = new Image(new FileInputStream(file1));

		try {
			Group root = new Group();
			Scene scene = new Scene(root, 400, 400);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());

			VBox v = new VBox(30);
			HBox h1 = new HBox(5);
			Circle c1 = new Circle(10, 10, 20);
			c1.setFill(javafx.scene.paint.Color.RED);

			Button b1 = new Button("Farbe 채ndern");
			b1.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent e) {
					if (c1.getFill().equals(javafx.scene.paint.Color.BLACK)) {
						c1.setFill(javafx.scene.paint.Color.RED);

					} else {
						c1.setFill(javafx.scene.paint.Color.BLACK);

					}

				}
			});

			HBox h2 = new HBox(10);
			Label l2 = new Label("Zieh an mir");
			Button b2 = new Button("Zeig den Wert an");
			Slider s1 = new Slider(0, 1, 0.5);
			s1.setMin(0);
			s1.setMax(100);
			s1.setShowTickMarks(true);
			s1.setMajorTickUnit(25);
			s1.setShowTickLabels(true);

			b2.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent e) {
					l2.setText("Der Wert is " + (int) s1.getValue());

				}
			});

			HBox h3 = new HBox();
			Button b3 = new Button("Zufallswert f체r Slider");
			b3.setMinWidth(400);

			b3.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent e) {
					s1.setValue((int) (Math.random() * 100 + 1));

				}
			});

			HBox h4 = new HBox();
			ProgressIndicator p1 = new ProgressIndicator();
			Button b4 = new Button("Download Starten");
			b4.setMinWidth(350);
			Tooltip hilfe = new Tooltip();
			hilfe.setText("Der Download wird nie fertig");
			p1.setTooltip(hilfe);
			b4.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent e) {
					int zufall = (int) (Math.random() * 99 + 1);
					b4.setText("Download failed at " + zufall);
					p1.setProgress(zufall / 100.);

				}
			});

			HBox h5 = new HBox();

			Slider s2 = new Slider();
			s2.setMin(0);
			s2.setMax(100);
			s2.setShowTickMarks(true);
			s2.setMinorTickCount(25);

			s2.setMajorTickUnit(25);
			s2.setShowTickLabels(true);
			s2.setMinWidth(400);
			s2.setValue(100);

			HBox h6 = new HBox(25);

			Rectangle r6 = new Rectangle(50, 50, Color.ORANGE);
			Circle c6 = new Circle(50, 50, 20);
			c6.setFill(Color.BROWN);
			Rectangle r9 = new Rectangle(50, 50, Color.BLACK);
			Rectangle r7 = new Rectangle(50, 50, Color.OLIVEDRAB);
			Rectangle r8 = new Rectangle(50, 50, Color.GOLD);
			Shape[] g1 = { r6, r7, r8, r9, c6 };
			h6.setAlignment(Pos.CENTER);

			s2.valueProperty().addListener(new ChangeListener<Number>() {
				public void changed(ObservableValue<? extends Number> ov, Number old_val, Number new_val) {

					for (Shape t : g1) {
						t.setOpacity(new_val.doubleValue() / 100);
						if (t instanceof Circle) {
							((Circle) t).setRadius(new_val.doubleValue() / 2);
						}
					}

				}
			});

			HBox h7 = new HBox(100);

			ToggleGroup gruppe = new ToggleGroup();

			RadioButton rb1 = new RadioButton("Clown 1");
			RadioButton rb2 = new RadioButton("Clown 2");

			Rectangle cr1 = new Rectangle(300, 300);
			cr1.setFill(new ImagePattern(clown, 0, 0, 1, 1, true));

			gruppe.selectedToggleProperty().addListener(new ChangeListener<Toggle>() {
				public void changed(ObservableValue<? extends Toggle> ov, Toggle old_toggle, Toggle new_toggle) {
					if (rb1.isSelected()) {
						cr1.setFill(new ImagePattern(clown, 0, 0, 1, 1, true));

					}
					if (rb2.isSelected()) {
						cr1.setFill(new ImagePattern(clown2, 0, 0, 1, 1, true));

					}

				}
			});

			rb1.setToggleGroup(gruppe);
			rb2.setToggleGroup(gruppe);
			rb1.setSelected(true);

			Button b10 = new Button("Nicht Dr체cken");
			b10.setTextFill(Color.RED);

			b10.setShape(new Circle(5, 5, 20));
			b10.setScaleX(3);
			b10.setScaleY(3);
			b10.setStyle("-fx-background-color: #000000; ");
			HBox h10 = new HBox();
			b10.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent e) {
					primaryStage.close();
					System.err.print("Da stand drauf nicht dr체cken!!!!");
				}
			});
			TextField tbox = new TextField("Schreib was rein");

			h10.setAlignment(Pos.CENTER);
			h10.getChildren().add(b10);
			h1.getChildren().addAll(c1, b1);
			h2.getChildren().addAll(s1, l2, b2);
			h3.getChildren().add(b3);
			h4.getChildren().addAll(p1, b4);
			h5.getChildren().add(s2);
			h6.getChildren().addAll(g1);
			h7.getChildren().addAll(rb1, rb2);
			v.getChildren().addAll(h1, h2, h3, h4, h5, h6, cr1, h7, h10, tbox);

			root.getChildren().add(v);

			primaryStage.setScene(scene);
			primaryStage.show();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		launch(args);
	}
}
